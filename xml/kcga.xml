<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE simulator [
	<!ATTLIST algorithm id ID #IMPLIED>
	<!ATTLIST problem id ID #IMPLIED>
	<!ATTLIST measurements id ID #IMPLIED>
]>

<simulator>
	<algorithms>
		<algorithm id="ga" class="ec.ea.EA">
			<mutationProbability>0.5</mutationProbability>
			<crossProbability>1.0</crossProbability>
			<populationSize>1000</populationSize>
			<population class="ec.ea.StandardPopulation" />
			<offspring class="ec.ea.StandardPopulation" />
			<!-- 	  <prototypeIndividual class="EC.EA.Individual"/> //-->
			<parentSelector class="ec.selectionoperators.TournamentSelection" tournamentSize="5"/>
			<!-- 	  <parentSelector class="EC.SelectionOperators.RandomSelection" /> //-->
			<generationGap>0</generationGap>
			<nextGenerationSurvivalSelector class="ec.selectionoperators.Elitism" />
			<nextGenerationOffSpringSelector class="ec.selectionoperators.RandomSelection" />
			<crossover class="ec.crossoveroperators.UniformCrossOver" />
			<mutator class="ec.mutationoperators.RandomBitMutation" />
			<random class="random.MersenneTwister" />
			<addStoppingCondition class="stoppingcondition.MaximumIterations" iterations="500" />
		</algorithm>
	</algorithms>

	<problems>
		<problem id="knightcover" class="ec.ea.KnightCoverageProblem" domain="B^64"/>	<!-- wat van die domain hierso -->    
	</problems>

	<measurements id="measurements" class="simulator.MeasurementSuite" samples="1" resolution="1"> 
		<addMeasurement class="measurement.Fitness" />
		<addMeasurement class="measurement.Solution" /> 
		<!--         <addMeasurement class="Measurement.FunctionOptimisationError" /> //-->    
	</measurements>

	<simulations> 
		<simulation>
			<algorithm idref="ga" />
			<problem idref="knightcover" /> 
			<measurements idref="measurements" file="ga-knightcover.txt" />
		</simulation>
	</simulations>
</simulator>
