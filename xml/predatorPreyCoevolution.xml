<?xml version="1.0"?>

<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>

<simulator>
	
	<problem id="pp" class="problem.CompetitiveCoevolutionGameLearningOptimizationProblem" amountEvaluations="10">
		<game class="games.game.predatorprey.PredatorPreyGame">
			<agent class="games.agent.NeuralAgent" hiddenNodes="2"> 
				<neuralNetworkTopology id="topo" class="neuralnetwork.generic.LayeredGenericTopology">
					<topologyBuilder class="neuralnetwork.generic.topologybuilders.FFNNgenericTopologyBuilder">
						<prototypeWeight class="neuralnetwork.generic.Weight">
							<weightValue class="type.types.Real" real="0.5"/>
							<previousChange class="type.types.Real" real="0.0"/>
						</prototypeWeight>
					</topologyBuilder>
					<weightInitialiser class="neuralnetwork.generic.topologyvisitors.RandomWeightInitialiser"/>
				</neuralNetworkTopology>
				<stateInputStrategy class="games.game.predatorprey.PredatorPreyNeuralInputStrategy"/>
				<outputInterpretationStrategy class="games.game.predatorprey.NeuralPredatorOutputStrategy"/>
			</agent>
			<agent class="games.agent.NeuralAgent" hiddenNodes="2"> 
				<neuralNetworkTopology id="topo" class="neuralnetwork.generic.LayeredGenericTopology">
					<topologyBuilder class="neuralnetwork.generic.topologybuilders.FFNNgenericTopologyBuilder">
						<prototypeWeight class="neuralnetwork.generic.Weight">
							<weightValue class="type.types.Real" real="0.5"/>
							<previousChange class="type.types.Real" real="0.0"/>
						</prototypeWeight>
					</topologyBuilder>
					<weightInitialiser class="neuralnetwork.generic.topologyvisitors.RandomWeightInitialiser"/>
				</neuralNetworkTopology>
				<stateInputStrategy class="games.game.predatorprey.PredatorPreyNeuralInputStrategy"/>
				<outputInterpretationStrategy class="games.game.predatorprey.NeuralPreyOutputStrategy"/>
			</agent>
			<scoringStrategy class="games.game.scoring.WinLoseDrawValueScoringStrategy" loseValue="0.0"/>
		</game>
	</problem>

	<algorithms>
		<algorithm id="lbest" class="pso.PSO">
			<initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy" entityNumber="40">
			<entityType class="pso.dynamic.ChargedParticle">
				<velocityUpdateStrategy class="pso.dynamic.ChargedVelocityUpdateStrategy">
					<vMax class="controlparameter.ConstantControlParameter" parameter="0.8"/>
				</velocityUpdateStrategy>
				<chargedParticleInitialisationStrategy class="pso.dynamic.StandardChargedParticleInitialisationStrategy"/>
			</entityType>
			</initialisationStrategy>
			<topology class="entity.topologies.LBestTopology">
				<neighbourhoodSize class = "controlparameter.ConstantControlParameter" parameter = "5"/>
			</topology>
		</algorithm>

		<algorithm id="compcoevol" class="coevolution.CoevolutionAlgorithm">
			<addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="800"/>
			<coevolutionIterationStrategy class="coevolution.CompetitiveCoevolutionIterationStrategy">
				<opponentSelectionStrategy class="coevolution.SelectNCurrentPBestOpponentSelectionStrategy" numberOfOpponents="40"/>
			</coevolutionIterationStrategy>
		</algorithm>
	</algorithms>

	<measurements id="fitness" class="simulator.MeasurementSuite" resolution="50" samples="1">
		<addMeasurement class="measurement.multiple.MultiPopulationFitness"/>
		<addMeasurement class="measurement.multiple.CoevolutionFitness"/>
	</measurements>

<simulations>
		<simulation>
			<algorithm idref="compcoevol">
				<algorithm idref="lbest"/>
				<algorithm idref="lbest"/>
			</algorithm>
			<problem idref="pp"/>
			<measurements idref="fitness" file="data/PPtest.txt"/>
		</simulation>
	</simulations>
</simulator>
