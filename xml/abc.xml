<?xml version="1.0"?>

<!DOCTYPE simulator [
	  <!ATTLIST algorithm id ID #IMPLIED>
	  <!ATTLIST problem id ID #IMPLIED>
	  <!ATTLIST measurements id ID #IMPLIED>
	  ]>
	  
	  <simulator>
		  
		  <algorithms>
			  <algorithm id="abc" class="boa.ABC">
				  <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy" entityNumber="40" >
					  
					  <entityType class="boa.bee.WorkerBee"/>
				  </initialisationStrategy>
				  <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000">
				  </addStoppingCondition>
				  
				  <dancingSelectionStrategy class="entity.operators.selection.RouletteWheelSelectionStrategy" />
				  <workerBeePercentage class="controlparameter.ConstantControlParameter" parameter="0.5" />
				  <forageLimit class="controlparameter.ConstantControlParameter" parameter="500" />
				  <explorerBeeUpdateLimit class="controlparameter.ConstantControlParameter" parameter="1" />
			  </algorithm>
			  
			  <algorithm id="pso" class="pso.PSO">
				  <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000">
				  </addStoppingCondition>
			  </algorithm>
		  </algorithms>
		  
		  <problems> 
			  <problem id="spherical" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Spherical"/>
			  </problem>
			  <problem id="rosenbrock" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Rosenbrock"/>
			  </problem>
			  <problem id="rastrigin" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Rastrigin"/>
			  </problem>
			  <problem id="griewank" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Griewank"/>
			  </problem>
			  <problem id="quadric" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Quadric"/>
			  </problem>
			  <problem id="michalewicz" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Michalewicz12"/>
			  </problem>
			  <problem id="hyperellipsoid" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.HyperEllipsoid"/>
			  </problem>
			  <problem id="easom" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Easom"/>
			  </problem>
			  <problem id="colville" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Colville"/>
			  </problem>
			  <problem id="bohachevsky1" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.unconstrained.Bohachevsky1"/>
			  </problem>
			  <problem id="ackley" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.unconstrained.Ackley"/>
			  </problem>
			  <problem id="schwefel" class="problem.FunctionMinimisationProblem">
				  <function class="functions.continuous.Schwefel"/>
			  </problem>
		  </problems>
		  
		  <measurements id="fitness" class="simulator.MeasurementSuite" resolution="10" samples="30">
			  <addMeasurement class="measurement.single.Fitness"/>
		  </measurements>
		  
		  <simulations>
			  <simulation>
				  <algorithm idref="abc"/>
				  <problem idref="spherical"/>
				  <measurements idref="fitness" file="data/test/abc_rastrigin.txt"/>
			  </simulation>
			  <simulation>
				  <algorithm idref="abc"/>
				  <problem idref="griewank"/>
				  <measurements idref="fitness" file="data/test/abc_griewank.txt"/>
			  </simulation>
			  <!--<simulation>
				  <algorithm idref="abc"/>
				  <problem idref="rastrigin"/>
				  <measurements idref="fitness" file="data/test/abc_rastrigin.txt"/>
			  </simulation>
			  <simulation>
				  <algorithm idref="abc"/>
				  <problem idref="rosenbrock"/>
				  <measurements idref="fitness" file="data/test/abc_rosenbrock.txt"/>
			  </simulation>-->
		  </simulations>
	  </simulator>
