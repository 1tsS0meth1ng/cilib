<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE simulator [	  
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>]>

<simulator>	
	<algorithms>
		<algorithm id="es" class="ec.ea.ES">
			<populationSize>30</populationSize>
			<prototypeIndividual class="ec.ea.Individual"/>
			<lambda class="controlparameterupdatestrategies.ConstantUpdateStrategy" parameter="200.0" /><!--must produce 200 offspring every iteration-->
			<parentSelector class="ec.selectionoperators.RandomSelection" />
			<crossProbability class="controlparameterupdatestrategies.ConstantUpdateStrategy" parameter="1.0"/>
			<crossover class="ec.crossoveroperators.DiscreteRecombination" parents="2"/><!--This means it is local-->
			<mutationProbability class="controlparameterupdatestrategies.ConstantUpdateStrategy" parameter="1.0"/>
			<mutator class="ec.mutationoperators.ASMutationDecorator">
				<component class="ec.mutationoperators.ESDeviationMutation">
					<randomSample class="math.RandomNumber" />
				</component>
				<problem idref="spherical" />
			</mutator>
			<parentsAsWell>false</parentsAsWell>
			<nextGenerationSurvivalSelector class="ec.selectionoperators.Elitism" />
			<addStoppingCondition class="stoppingcondition.MaximumIterations" iterations="1000" /> 
		</algorithm>
	</algorithms>

	<problems>
		<problem id="spherical" class="problem.FunctionMinimisationProblem">
				<function class="functions.continuous.Spherical" domain="R(-5.12,5.12)^30" behavioralDomain="R(0,1)" />
		</problem>
		<problem id="rosenbrock" class="problem.FunctionMinimisationProblem">
			<function class="functions.continuous.Rosenbrock" domain="R(-2.048, 2.048)^30" behavioralDomain="R(0,1)"/>
		</problem>
		<problem id="griewank" class="problem.FunctionMinimisationProblem">
			<function class="functions.continuous.Griewank" domain="R(-600, 600)^30" behavioralDomain="R(0,1)"/>
		</problem>
		<problem id="hyperellipsoid" class="problem.FunctionMinimisationProblem">
			<function class="functions.continuous.HyperEllipsoid" domain="R(-1, 1)^30" behavioralDomain="R(0,1)" />
		</problem>
		<problem id="colville" class="problem.FunctionMinimisationProblem">
			<function class="functions.continuous.Colville" domain="R(-10, 10)^4" behavioralDomain="R(0,1)"/>
		</problem>
		<problem id="ackley" class="problem.FunctionMinimisationProblem">
			<function class="functions.continuous.Ackley" domain="R(-30, 30)^30" behavioralDomain="R(0,1)"/>
		</problem>
	</problems>

	<measurements id="measurements" class="simulator.MeasurementSuite" samples="1" resolution="100">
		<addMeasurement class="measurement.single.FunctionOptimisationError" />
		<addMeasurement class="measurement.single.Solution" />
	</measurements>

	<simulations>
		<simulation>
			<algorithm idref="es" />
			<problem idref="spherical" />
			<measurements idref="measurements" file="data/es-spherical.txt" />
		</simulation>
		<simulation>
			<algorithm idref="es" />
			<problem idref="rosenbrock" />
			<measurements idref="measurements" file="data/es-rosenbrock.txt" />
		</simulation>
		<simulation>
			<algorithm idref="es" />
			<problem idref="griewank" />
			<measurements idref="measurements" file="data/es-griewank.txt" />
		</simulation>
		<simulation>
			<algorithm idref="es" />
			<problem idref="hyperellipsoid" />
			<measurements idref="measurements" file="data/es-hyperellipsoid.txt" />
		</simulation>
		<simulation>
			<algorithm idref="es" />
			<problem idref="ackley" />
			<measurements idref="measurements" file="data/es-ackley.txt" />
		</simulation>
		<simulation>
			<algorithm idref="es" />
			<problem idref="colville" />
			<measurements idref="measurements" file="data/es-colville.txt" />
		</simulation>
	</simulations>
</simulator>
